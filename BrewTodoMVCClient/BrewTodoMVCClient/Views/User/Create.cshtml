@model BrewTodoMVCClient.Models.UserViewModel

@{ViewBag.Title = "Add New User";}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="container">
    <div class="columns is-centered">
        <div class="column is-5-tablet is-4-desktop is-3-widescreen">
            <div class="form-horizontal">
                <h4>@ViewBag.Title</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="field">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "label" })
                    <div class="column">
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "input", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="field">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "label" })
                    <div class="column">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "input" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="field">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "label" })
                    <div class="column">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "input" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="field">
                    @Html.Label("Password", htmlAttributes: new { @class = "label" })
                    <div class="column">
                        @Html.Password("Password", null, new { required = "required", @class = "input" })
                        @if (!string.IsNullOrEmpty(ViewBag.PasswordError))
                        {
                            @ViewBag.PasswordError
                        }
                    </div>
                </div>
                <div class="field">
                    @Html.Label("Confirm Password", htmlAttributes: new { @class = "label" })
                    <div class="column">
                        @Html.Password("Password2", null, new { required = "required", @class = "input" })
                    </div>
                </div>
                <div class="field">
                    <div class="col-md-offset-2 column">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
            </div>
        </div>
    </div>
            }


            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
