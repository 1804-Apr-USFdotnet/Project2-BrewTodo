@model BrewTodoMVCClient.Models.BeerViewModel

@{ViewBag.Title = "Delete Beer";}

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>@ViewBag.Title</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.BeerID)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.BeerID)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.BeerName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.BeerName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ABV)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ABV)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.BeerTypeID)
        </dt>

        <dd>
            @{
                string beerType = (ViewBag.BeerTypes as List<SelectListItem>).Find(x => int.Parse(x.Value) == Model.BeerTypeID).Text;
            }

            @Html.DisplayFor(model => beerType)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.BreweryID)
        </dt>

        <dd>
            @{
                string brewery = (ViewBag.Breweries as List<SelectListItem>).Find(x => int.Parse(x.Value) == Model.BreweryID).Text;
            }

            @Html.DisplayFor(model => brewery)
        </dd>

    </dl>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ABV)
        @Html.HiddenFor(model => model.BeerID)
        @Html.HiddenFor(model => model.BeerName)
        @Html.HiddenFor(model => model.BeerTypeID)
        @Html.HiddenFor(model => model.BreweryID)
        @Html.HiddenFor(model => model.Description)

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-default" /> |

        </div>
    }
</div>
